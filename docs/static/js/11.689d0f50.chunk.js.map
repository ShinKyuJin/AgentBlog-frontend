{"version":3,"sources":["components/ImageLoader.tsx","shared/utils.tsx","containers/HomePostList/HomePostListQueries.tsx","components/HomePostCard.tsx","containers/HomePostList/HomePostList.tsx","components/Sidebar/SidebarQueries.tsx","components/Footer.tsx","components/Sidebar/Sidebar.tsx","components/Sidebar/index.tsx","components/PageTab.tsx","pages/Home.tsx"],"names":["Image","styled","img","props","_loading","ImageLoader","loadingHeight","useState","loading","setLoading","error","setError","height","onLoad","onError","e","convertMarkdownToText","str","marked","replace","match","dec","String","fromCharCode","QUERY_LATEST_POST","gql","QUERY_TRENDY_POST","Container","article","ImageContainer","Link","PostInfoContainer","div","ContentContainer","RestInfoContainer","UserInfoContainer","LikesCon","TitleCon","b","ContentCon","p","AvatarBy","AvatarUsername","React","memo","postInfo","thumbnailError","setThumbnailError","thumbnail","files","length","url","description","content","to","user","username","src","title","createdAt","slice","commentCount","Avatar","size","avatar","likeCount","section","Main","main","HomePostList","post","postType","useQuery","skip","trendData","data","trendLoading","trendError","recentData","recentLoading","recentError","seeTrendyPost","seeLatestPost","useEffect","window","location","reload","toast","loadingCard","Array","from","x","i","map","key","mappingCard","id","QUERY_POP_TAGS","Footer","aside","PopularTagP","Contour","hr","Tags","Tag","prop","theme","greyColor","Sidebar","setFix","mappingTags","getPopularHashtag","name","handleWheel","screenY","onWheel","TabContainer","tabCount","tabWidth","TabButton","tabNum","FocusBar","setTabNum","tabItems","Helmet","tab","idx","onClick","newTabItem","history","replaceState","tabButtonHandler","component","responsiveContainer","TabText","Home","useLocation","pathname","document","body","style","backgroundColor","Theme","homeBgColor","bgColor","Icon","type"],"mappings":"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","file":"static/js/11.689d0f50.chunk.js","sourcesContent":["import React, { ImgHTMLAttributes, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Skeleton from \"react-loading-skeleton\";\n\ninterface ImageLoaderProps extends ImgHTMLAttributes<HTMLImageElement> {\n  loadingHeight?: string | number | undefined;\n}\n\nconst ImageLoader: React.FC<ImageLoaderProps> = ({\n  loadingHeight,\n  ...props\n}) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<boolean>(false);\n  const onLoad = () => setLoading(false);\n  const onError = (e: React.SyntheticEvent<HTMLImageElement, Event>) => {\n    setError(true);\n    if (props.onError) {\n      props.onError(e);\n    }\n  };\n\n  return (\n    <>\n      {loading && !error && <Skeleton height={loadingHeight} />}\n      {!error && (\n        <Image\n          _loading={loading}\n          onLoad={onLoad}\n          onError={onError}\n          {...props}\n        />\n      )}\n    </>\n  );\n};\n\ninterface ImageProps {\n  _loading: boolean;\n}\n\nconst Image = styled.img<ImageProps>`\n  display: ${(props) => (props._loading ? \"none\" : \"inline\")};\n`;\n\nexport default ImageLoader;\n","import marked from \"marked\";\n\nexport const convertMarkdownToText = (str: string) => {\n  return marked(str)\n    .replace(/<[^>]+>/g, \"\")\n    .replace(/&#(\\d+);/g, function (match, dec) {\n      return String.fromCharCode(dec);\n    });\n};\n","import { gql } from \"apollo-boost\";\nimport { HomePostProps } from \"../../interface/post\";\n\nexport interface seeLatestPostData {\n  seeLatestPost: HomePostProps[];\n}\n\nexport interface seeTrendyPostData {\n  seeTrendyPost: HomePostProps[];\n}\n\nexport const QUERY_LATEST_POST = gql`\n  {\n    seeLatestPost {\n      id\n      user {\n        avatar\n        username\n      }\n      files {\n        url\n      }\n      url\n      title\n      description\n      content\n      thumbnail\n      likeCount\n      createdAt\n      commentCount\n    }\n  }\n`;\n\nexport const QUERY_TRENDY_POST = gql`\n  {\n    seeTrendyPost {\n      id\n      user {\n        avatar\n        username\n      }\n      files {\n        url\n      }\n      url\n      title\n      description\n      content\n      thumbnail\n      likeCount\n      createdAt\n      commentCount\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Avatar from \"./Avatar\";\nimport { Link } from \"react-router-dom\";\nimport ImageLoader from \"./ImageLoader\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { HomePostProps } from \"../interface/post\";\nimport { convertMarkdownToText } from \"../shared/utils\";\n\ninterface PostCardProps {\n  postInfo?: HomePostProps;\n}\n\nconst HomePostCard: React.FC<PostCardProps> = ({ postInfo }) => {\n  const [thumbnailError, setThumbnailError] = useState(false);\n\n  if (!postInfo) {\n    return (\n      <Container>\n        <Skeleton height={400} />\n      </Container>\n    );\n  } else {\n    const thumbnail = postInfo.thumbnail\n      ? postInfo.thumbnail\n      : postInfo.files.length > 0\n      ? postInfo.files[0].url\n      : null;\n    const description = postInfo.description\n      ? postInfo.description\n      : convertMarkdownToText(postInfo.content);\n    return (\n      <Container>\n        {thumbnail && !thumbnailError && (\n          <ImageContainer to={`/@${postInfo.user.username}/${postInfo.url}`}>\n            <Image\n              src={thumbnail}\n              loadingHeight={177}\n              onError={() => setThumbnailError(true)}\n            />\n          </ImageContainer>\n        )}\n\n        <PostInfoContainer>\n          <ContentContainer to={`/@${postInfo.user.username}/${postInfo.url}`}>\n            <TitleCon>{postInfo.title}</TitleCon>\n            <ContentCon>{description}</ContentCon>\n          </ContentContainer>\n          <RestInfoContainer>\n            {postInfo.createdAt.slice(0, 10)} · {postInfo.commentCount}개의 댓글\n          </RestInfoContainer>\n        </PostInfoContainer>\n        <UserInfoContainer to={`/@${postInfo.user.username}`}>\n          <Avatar size=\"sm\" url={postInfo.user.avatar} />\n          &nbsp;\n          <AvatarBy>by</AvatarBy>&nbsp;\n          <AvatarUsername>{postInfo.user.username}</AvatarUsername>\n          <LikesCon>♥&nbsp;{postInfo.likeCount}</LikesCon>\n        </UserInfoContainer>\n      </Container>\n    );\n  }\n};\n\nconst Container = styled.article`\n  @media (max-width: 944px) {\n    width: calc(50% - 2rem);\n  }\n\n  @media (max-width: 767px) {\n    width: 100%;\n    margin: 0px 0px 1rem 0px;\n  }\n  width: 20rem;\n  margin: 1rem;\n\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  justify-content: space-between;\n  overflow: hidden;\n  border-radius: 6px;\n  background-color: white;\n  box-shadow: rgba(0, 0, 0, 0.04) 0px 4px 16px 0px;\n\n  -webkit-transition: box-shadow 0.25s ease-in 0s,\n    -webkit-transform 0.25s ease-in 0s;\n  transition: box-shadow 0.25s ease-in 0s, transform 0.25s ease-in 0s;\n\n  &:hover {\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 16px 0px;\n  }\n  @media (min-width: 944px) {\n    &:hover {\n      transform: translateY(-10px);\n      box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 16px 0px;\n    }\n  }\n`;\n\nconst ImageContainer = styled(Link)`\n  position: relative;\n  padding-bottom: 55%;\n  width: 100%;\n  max-height: 177px;\n`;\n\nconst Image = styled(ImageLoader)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n  display: block;\n  object-fit: cover;\n`;\n\nconst PostInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 1rem;\n  flex: 1 1 0%;\n`;\n\nconst ContentContainer = styled(Link)`\n  color: black;\n  text-decoration: none;\n\n  &:focus {\n    color: black;\n  }\n`;\n\nconst RestInfoContainer = styled.div`\n  font-size: 13px;\n  color: rgb(134, 142, 150);\n`;\n\nconst UserInfoContainer = styled(Link)`\n  padding: 0 16px;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  color: black;\n  text-decoration: none;\n  border-top: 1px solid rgb(240, 240, 240);\n  flex-direction: row;\n\n  &:focus {\n    color: black;\n  }\n`;\n\nconst LikesCon = styled.div`\n  font-size: 0.875rem;\n  position: absolute;\n  right: 16px;\n`;\n\nconst TitleCon = styled.b`\n  font-size: 1rem;\n  line-height: 1.5;\n`;\n\nconst ContentCon = styled.p`\n  word-break: break-word;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  word-wrap: break-word;\n  line-height: 1.5rem;\n  height: 1.5rem * 3;\n  font-size: 0.875rem;\n  color: rgb(73, 80, 87);\n`;\n\nconst AvatarBy = styled.p`\n  color: rgb(134, 142, 150);\n  font-size: 14px;\n`;\nconst AvatarUsername = styled.p`\n  font-size: 14px;\n  font-weight: 550;\n`;\n\nexport default React.memo(HomePostCard);\n","import React, { FC, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport {\n  seeLatestPostData,\n  seeTrendyPostData,\n  QUERY_LATEST_POST,\n  QUERY_TRENDY_POST,\n} from \"./HomePostListQueries\";\nimport HomePostCard from \"../../components/HomePostCard\";\nimport { toast } from \"react-toastify\";\nimport { HomePostProps } from \"../../interface/post\";\nimport { ApolloError } from \"apollo-boost\";\n\ninterface HomePostListProps {\n  postType: \"trend\" | \"recent\";\n}\n\nconst HomePostList: FC<HomePostListProps> = ({ postType }) => {\n  const {\n    data: trendData,\n    loading: trendLoading,\n    error: trendError,\n  } = useQuery<seeTrendyPostData>(QUERY_TRENDY_POST, {\n    skip: postType === \"recent\",\n  });\n  const {\n    data: recentData,\n    loading: recentLoading,\n    error: recentError,\n  } = useQuery<seeLatestPostData>(QUERY_LATEST_POST, {\n    skip: postType === \"trend\",\n  });\n\n  let post: HomePostProps[] | undefined,\n    loading: boolean | undefined,\n    error: ApolloError | undefined;\n  if (postType === \"trend\") {\n    [post, loading, error] = [\n      trendData?.seeTrendyPost,\n      trendLoading,\n      trendError,\n    ];\n  } else if (postType === \"recent\") {\n    [post, loading, error] = [\n      recentData?.seeLatestPost,\n      recentLoading,\n      recentError,\n    ];\n  }\n  useEffect(() => {\n    if (error) {\n      window.location.reload();\n      toast.error(\"포스트를 가져오던 중 문제가 발생했습니다.\");\n    }\n  }, [error]);\n\n  const loadingCard = Array.from({ length: 20 }, (x, i) => i).map((i) => (\n    <HomePostCard key={i} />\n  ));\n  const mappingCard = post\n    ? post.map((postInfo) => (\n        <HomePostCard key={postInfo.id} postInfo={postInfo} />\n      ))\n    : null;\n\n  return (\n    <Main>\n      <Container>\n        {loading || !post || error ? loadingCard : mappingCard}\n      </Container>\n    </Main>\n  );\n};\n\nconst Container = styled.section`\n  @media (max-width: 768px) {\n    margin: 0px;\n  }\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n  margin: -1rem;\n`;\n\nconst Main = styled.main`\n  width: 100%;\n`;\n\nexport default HomePostList;\n","import { gql } from \"apollo-boost\";\n\nexport const QUERY_POP_TAGS = gql`\n{\n  getPopularHashtag {\n    name\n  }\n}\n`","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n`\n\nconst Footer = () => {\n  return (\n    <Container>\n      Developed by miminishin/skyoun97\n    </Container>\n  )\n}\n\nexport default Footer;","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport { QUERY_POP_TAGS } from \"./SidebarQueries\";\nimport Footer from \"../Footer\";\n\ninterface getPopularHashtag {\n  name: string;\n}\ninterface SidebarData {\n  getPopularHashtag: Array<getPopularHashtag>;\n}\n\nlet key = 0;\n\nconst Sidebar = () => {\n  const [fix, setFix] = useState<Boolean>(false);\n\n  const { data } = useQuery<SidebarData>(QUERY_POP_TAGS);\n  //console.log(data?.getPopularHashtag);\n  const mappingTags = data?.getPopularHashtag.map(({ name }) => (\n    <Tag to={`/tags/${name}`} key={key++}>\n      #&nbsp;{name}\n    </Tag>\n  ));\n\n  const handleWheel = (e: React.WheelEvent) => {\n    if (e.screenY >= 90) {\n      setFix(true);\n    } else {\n      setFix(false);\n    }\n  };\n\n  return (\n    <Container>\n      <ContentContainer>\n        <PopularTagP>인기 태그</PopularTagP>\n        <Contour />\n        {fix ? (\n          <Tags onWheel={handleWheel}>{mappingTags}</Tags>\n        ) : (\n          <Tags onWheel={handleWheel}>{mappingTags}</Tags>\n        )}\n      </ContentContainer>\n      <Footer />\n    </Container>\n  );\n};\n\nconst Container = styled.aside`\n  @media (max-width: 1440px) {\n    margin-left: 3rem;\n    width: 12rem;\n  }\n\n  @media (max-width: 944px) {\n    display: none;\n  }\n  margin-left: 6rem;\n  width: 16rem;\n\n  display: flex;\n  flex-direction: column;\n  margin-right: auto;\n`;\n\nconst ContentContainer = styled.div`\n  @media (max-width: 1440px) {\n    width: 12rem;\n  }\n  width: 16rem;\n`;\n\nconst PopularTagP = styled.b``;\n\nconst Contour = styled.hr`\n  border: 1px solid rgb(233, 236, 239);\n`;\n\nconst Tags = styled.p`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Tag = styled(Link)`\n  text-decoration: none;\n  color: ${(prop) => prop.theme.greyColor};\n  font-size: 15px;\n  line-height: 1.5;\n\n  &:focus {\n    color: ${(prop) => prop.theme.greyColor};\n  }\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  & + & {\n    margin-top: 5px;\n  }\n`;\n\nexport default React.memo(Sidebar);\n","import Sidebar from './Sidebar';\n\nexport default Sidebar;","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\n\ninterface PageTabProps {\n  tabItems: { title?: string; url: string; component: React.ReactNode }[];\n  tabNum: number;\n  setTabNum: any;\n  tabWidth?: number;\n}\n\nconst PageTab: FC<PageTabProps> = ({\n  tabNum,\n  setTabNum,\n  tabItems,\n  tabWidth,\n}) => {\n  const tabButtonHandler = (idx: number) => {\n    const newTabItem = tabItems[idx];\n    //console.log(idx);\n    //console.log(newTabItem);\n    setTabNum(idx);\n    window.history.replaceState(null, newTabItem.title || \"\", newTabItem.url);\n  };\n\n  return (\n    <nav>\n      <Helmet>\n        <title>{tabItems[tabNum].title}</title>\n      </Helmet>\n      <TabContainer tabCount={tabItems.length} tabWidth={tabWidth || 7}>\n        {tabItems.map((tab, idx) => (\n          <TabButton\n            key={idx}\n            tabNum={tabNum}\n            tabWidth={tabWidth || 7}\n            onClick={() => tabButtonHandler(idx)}\n          >\n            {tabItems[idx].component}\n          </TabButton>\n        ))}\n        <FocusBar tabNum={tabNum} tabCount={tabItems.length} />\n      </TabContainer>\n    </nav>\n  );\n};\n\ninterface TabContainerProps {\n  tabCount: number;\n  tabWidth: number;\n}\nconst TabContainer = styled.div<TabContainerProps>`\n  width: ${(props) => props.tabCount * props.tabWidth + `rem`};\n  min-height: min-content;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\ninterface TabProps {\n  tabNum: number;\n  tabWidth: number;\n}\nconst TabButton = styled.div<TabProps>`\n  width: ${(props) => props.tabWidth + `rem`};\n  display: flex;\n  position: relative;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.125rem;\n  height: 3rem;\n  text-decoration: none;\n  &:nth-child(${(props) => props.tabNum + 1}) {\n    color: rgb(52, 58, 64);\n    font-weight: bold;\n  }\n  color: rgb(134, 142, 150);\n  cursor: pointer;\n`;\n\ninterface TabFocusProps {\n  tabCount: number;\n  tabNum: number;\n}\nconst FocusBar = styled.div<TabFocusProps>`\n  width: ${(props) => (props.tabCount === 0 ? 0 : 100 / props.tabCount + `%`)};\n  height: 2px;\n  bottom: 0px;\n  background: rgb(52, 58, 64);\n  transition: transform 0.35s cubic-bezier(0, 0, 0.1, 1.5) 0s;\n  position: relative;\n  transform: ${(props) => `translateX(${props.tabNum * 100}%);`};\n`;\n\nexport default React.memo(PageTab);\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport HomePostList from \"../containers/HomePostList/HomePostList\";\nimport Sidebar from \"../components/Sidebar\";\nimport Theme from \"../styles/theme\";\nimport { useLocation } from \"react-router-dom\";\nimport PageTab from \"../components/PageTab\";\nimport { Icon } from \"../components/Icon\";\n\nconst Home = () => {\n  const location = useLocation();\n  const [tabNum, setTabNum] = useState(location.pathname === \"/recent\" ? 1 : 0);\n\n  useEffect(() => {\n    document.body.style.backgroundColor = Theme.homeBgColor;\n    return () => {\n      document.body.style.backgroundColor = Theme.bgColor;\n    };\n  }, []);\n\n  return (\n    <Container>\n      <PageTab\n        {...{ tabNum, setTabNum }}\n        tabItems={[\n          {\n            title: \"Agent Blog\",\n            url: \"/\",\n            component: (\n              <>\n                <Icon type={\"trend\"} size={18} />\n                <TabText>트렌딩</TabText>\n              </>\n            ),\n          },\n          {\n            title: \"최신포스트\",\n            url: \"/recent\",\n            component: (\n              <>\n                <Icon type={\"time\"} size={18} />\n                <TabText>최신</TabText>\n              </>\n            ),\n          },\n        ]}\n      />\n\n      <ContentContainer>\n        <HomePostList postType={tabNum === 0 ? \"trend\" : \"recent\"} />\n        <Sidebar />\n      </ContentContainer>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  ${(prop) => prop.theme.responsiveContainer}\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  margin-top: 2rem;\n`;\n\nconst ContentContainer = styled.div`\n  display: flex;\n  margin-top: 2rem;\n`;\n\nconst TabText = styled.div`\n  margin-left: 0.5rem;\n`;\n\nexport default Home;\n"],"sourceRoot":""}