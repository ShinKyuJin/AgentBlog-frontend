{"version":3,"sources":["components/Hashtag.tsx","components/Markdown.tsx","pages/PostDetail/PostDetailQueries.tsx","pages/PostDetail/Comment/addCommentQueries.tsx","pages/PostDetail/PostDetailPresenter.tsx","pages/PostDetail/PostDetailContainer.tsx","pages/PostDetail/index.tsx"],"names":["HashtagContainer","styled","Link","React","memo","name","isLink","onClick","to","e","preventDefault","InlineCodeBlock","props","style","background","value","BlockQuoteBlock","backgroundColor","padding","margin","borderLeft","children","CodeBlock","color","Conatiner","div","source","replace","renderers","code","blockquote","skipHtml","escapeHtml","MUTATION_LIKE_POST","gql","QUERY_POST_DETAIL","ADD_COMMENT","Container","main","HeaderContainer","header","TitleContainer","InfoContainer","ToUserInfo","BodyContainer","article","TailContainer","TailAvatar","Avatar","TailLink","TailUserInfo","Contour","hr","CommentMakeContainer","CommentCount","CommentInput","textarea","CommentSubmit","Button","LikeSidebarContainer","LikeSidebar","aside","LikeContainer","LikeButton","LikedButton","LikeCount","p","CommentsContaniner","CommentBox","CommentUser","CommentProfile","CommentInfo","ConmentUserName","CommentDate","CommentContent","PostDetailPresenter","username","data","loading","comment","makeCommentDisable","handleChangeComment","handleMakeComment","handleClickLike","PostDetail","useMemo","content","Helmet","getPostDetail","title","createdAt","slice","hashtags","map","key","Hashtag","isLiked","Icon","type","likeCount","Markdown","url","user","avatar","size","bio","comments","id","text","Object","keys","length","commentCount","onChange","disabled","PostDetailContainer","useParams","posturl","useQuery","variables","postData","refetch","useState","setMakeCommentDisable","setComment","useMutation","commentMutation","likeMutation","useCallback","target","a","postId","addComment","toast","success","error","window","scrollTo","document","body","scrollHeight","console","log","toggleLike"],"mappings":"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","file":"static/js/9.2cc17e3f.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\ninterface HashtagPrpps {\n  name: string;\n  isLink?: boolean;\n  onClick?:\n    | ((event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void)\n    | undefined;\n}\nconst Hashtag: React.FC<HashtagPrpps> = ({ name, isLink = true, onClick }) => {\n  if (isLink) {\n    return <HashtagContainer to={`/tags/${name}`}>{name}</HashtagContainer>;\n  }\n  return (\n    <HashtagContainer\n      to={`/tags/${name}`}\n      onClick={(e) => {\n        e.preventDefault();\n        if (onClick) {\n          onClick(e);\n        }\n      }}\n    >\n      {name}\n    </HashtagContainer>\n  );\n};\n\nconst HashtagContainer = styled(Link)`\n  @media (max-width: 768px) {\n    height: 1.5rem;\n    font-size: 0.75rem;\n    padding-left: 0.75rem;\n    padding-right: 0.75rem;\n    margin-right: 0.5rem;\n    margin-bottom: 0.5rem;\n    border-radius: 0.75rem;\n  }\n  display: inline-flex;\n  align-items: center;\n  height: 2rem;\n  padding: 0px 1rem;\n  margin-bottom: 0.875rem;\n  background-color: rgb(241, 243, 245);\n\n  color: rgb(12, 166, 120);\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 1rem;\n  border-radius: 1rem;\n\n  & + & {\n    margin-left: 10px;\n  }\n\n  transition: background-color 0.08s ease-out 0s;\n  &:hover {\n    background-color: rgb(249, 249, 250);\n  }\n`;\n\nexport default React.memo(Hashtag);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ReactMarkdown from \"react-markdown\";\n\ninterface MarkdownProps {\n  source: string;\n}\n\nconst Markdown: React.FC<MarkdownProps> = ({ source }) => {\n  return (\n    <Conatiner>\n      <ReactMarkdown\n        source={source.replace(/\\n/g, \"  \\n\")}\n        renderers={{\n          code: CodeBlock,\n          InlineCodeBlock: InlineCodeBlock,\n          blockquote: BlockQuoteBlock,\n        }}\n        skipHtml={false}\n        escapeHtml={false}\n      />\n    </Conatiner>\n  );\n};\n\nconst InlineCodeBlock = (props: any) => {\n  return <span style={{ background: \"#ff0\" }}>{props.value}</span>;\n};\n\nconst BlockQuoteBlock = (props: any) => {\n  return (\n    <div\n      style={{\n        backgroundColor: \"rgb(248,249,250)\",\n        padding: \"1rem 1rem 1rem 2rem\",\n        margin: 5,\n        borderLeft: \"4px solid rgb(32, 201, 151)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nconst CodeBlock = (props: any) => {\n  return (\n    <pre style={{ background: \"rgb(248,249,250)\", color: \"#000\", padding: 10 }}>\n      <code>{props.value}</code>\n    </pre>\n  );\n};\n\nconst Conatiner = styled.div``;\n\nexport default React.memo(Markdown);\n","import { gql } from \"apollo-boost\";\nimport { getPostDetail } from \"../../interface/post\";\n\nexport interface getPostDetailData {\n  getPostDetail: getPostDetail;\n}\n\nexport interface getPostDetailVars {\n  username: string;\n  url: string;\n}\n\nexport const MUTATION_LIKE_POST = gql`\n  mutation toggleLike($postId: String!) {\n    toggleLike(postId: $postId)\n  }\n`;\n\nexport const QUERY_POST_DETAIL = gql`\n  query getPostDetail($username: String!, $url: String!) {\n    getPostDetail(username: $username, url: $url) {\n      id\n      title\n      user {\n        id\n        avatar\n        bio\n      }\n      files {\n        id\n        url\n      }\n      hashtags {\n        id\n        name\n      }\n      createdAt\n      commentCount\n      content\n      comments {\n        id\n        text\n        user {\n          username\n          avatar\n        }\n        createdAt\n      }\n      isLiked\n      likeCount\n    }\n  }\n`;\n","import { gql } from 'apollo-boost';\n\nexport interface addComment {\n  text: string;\n  postId: string;\n}\n\nexport interface addCommentVar {\n  addComment: addComment;\n}\n\nexport interface addCommentData {\n  user: {\n    avatar: string;\n    username: string;\n  }\n  text: string;\n}\n\nexport const ADD_COMMENT = gql`\nmutation addComment(\n  $text: String!,\n  $postId: String!\n) {\n  addComment(text: $text, postId: $postId) {\n    user {\n      avatar\n      username\n    }\n    text\n  }\n}\n`","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport Hashtag from \"../../components/Hashtag\";\nimport Markdown from \"../../components/Markdown\";\nimport Avatar from \"../../components/Avatar\";\nimport Button from \"../../components/Button\";\nimport { getPostDetailData } from \"./PostDetailQueries\";\nimport { Icon } from \"../../components/Icon\";\nimport { Helmet } from \"react-helmet\";\n\ninterface PostDetailPresenterProps {\n  username: string;\n  data?: getPostDetailData;\n  loading: boolean;\n  comment: string;\n  makeCommentDisable: any;\n  handleChangeComment: any;\n  handleMakeComment: any;\n  handleClickLike: any;\n}\n\nconst PostDetailPresenter: FC<PostDetailPresenterProps> = ({\n  username,\n  data,\n  loading,\n  comment,\n  makeCommentDisable,\n  handleChangeComment,\n  handleMakeComment,\n  handleClickLike,\n}) => {\n  const PostDetail = React.useMemo(\n    () => ({\n      content: (\n        <>\n          <Helmet>\n            <title>{data?.getPostDetail.title}</title>\n          </Helmet>\n          <HeaderContainer>\n            <TitleContainer>{data?.getPostDetail.title}</TitleContainer>\n            <InfoContainer>\n              <ToUserInfo to={`/@${username}`}>{username}</ToUserInfo> ·{\" \"}\n              {data?.getPostDetail.createdAt.slice(0, 10)}\n            </InfoContainer>\n            <HashtagContainer>\n              {data?.getPostDetail.hashtags.map(({ name }, key) => (\n                <Hashtag key={key++} name={name} />\n              ))}\n            </HashtagContainer>\n            <LikeSidebarContainer>\n              <LikeSidebar>\n                <LikeContainer>\n                  {data?.getPostDetail.isLiked ? (\n                    <LikedButton onClick={handleClickLike}>\n                      <Icon type={\"redHeart\"} />\n                    </LikedButton>\n                  ) : (\n                    <LikeButton onClick={handleClickLike}>\n                      <Icon type={\"blackHeart\"} />\n                    </LikeButton>\n                  )}\n                  <LikeCount>{data?.getPostDetail.likeCount}</LikeCount>\n                </LikeContainer>\n              </LikeSidebar>\n            </LikeSidebarContainer>\n          </HeaderContainer>\n          <BodyContainer>\n            <Markdown source={data?.getPostDetail.content || \"\"} />\n          </BodyContainer>\n          <TailContainer>\n            <Link to={`/@${username}`}>\n              <TailAvatar\n                url={data?.getPostDetail.user.avatar || \"\"}\n                size=\"lg\"\n              />\n            </Link>\n            <TailUserInfo>\n              <TailLink to={`/@${username}`}>{username}</TailLink>\n              {data?.getPostDetail.user.bio}\n            </TailUserInfo>\n          </TailContainer>\n          <Contour />\n          <hr />\n        </>\n      ),\n      comments: (\n        <CommentsContaniner>\n          {data?.getPostDetail.comments.map((comment) => (\n            <CommentBox key={comment.id}>\n              <CommentUser>\n                <CommentProfile></CommentProfile>\n                <Avatar url={comment.user.avatar} size={\"md\"} />\n                <CommentInfo>\n                  <ConmentUserName>{comment.user.username}</ConmentUserName>\n                  <CommentDate>{comment.createdAt.slice(0, 10)}</CommentDate>\n                </CommentInfo>\n              </CommentUser>\n              <CommentContent>\n                <pre>{comment.text}</pre>\n              </CommentContent>\n            </CommentBox>\n          ))}\n        </CommentsContaniner>\n      ),\n    }),\n    [data]\n  );\n\n  if (loading || (data && Object.keys(data).length === 0)) {\n    return <Container></Container>;\n  }\n\n  return (\n    <Container>\n      {PostDetail.content}\n      <CommentMakeContainer>\n        <CommentCount>{data?.getPostDetail.commentCount}개의 댓글</CommentCount>\n        <CommentInput onChange={handleChangeComment} value={comment} />\n        <CommentSubmit\n          text={\"댓글작성\"}\n          onClick={handleMakeComment}\n          disabled={makeCommentDisable}\n        />\n      </CommentMakeContainer>\n      {PostDetail.comments}\n    </Container>\n  );\n};\n\nconst Container = styled.main`\n  @media (max-width: 1024px) {\n    padding-left: 1rem;\n    padding-right: 1rem;\n    width: 100%;\n  }\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  margin: 0 auto;\n  background-color: white;\n  margin-top: 5rem;\n`;\nconst HeaderContainer = styled.header`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: no-wrap;\n`;\nconst TitleContainer = styled.div`\n  @media (max-width: 1024px) {\n    font-size: 2.25rem;\n  }\n  font-weight: 700;\n  font-size: 1.5rem;\n  font-size: 60px;\n  line-height: 1.5;\n  margin-bottom: 2rem;\n`;\nconst InfoContainer = styled.div`\n  font-size: 18px;\n`; // username, createdAt\nconst ToUserInfo = styled(Link)`\n  text-decoration: none;\n  font-weight: bold;\n  color: black;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\nconst HashtagContainer = styled.div`\n  margin-top: 10px;\n`;\n\nconst BodyContainer = styled.article``;\nconst TailContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst TailAvatar = styled(Avatar)``;\nconst TailLink = styled(Link)`\n  display: block;\n  text-decoration: none;\n  color: black;\n  font-weight: bold;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\nconst TailUserInfo = styled.div`\n  margin-left: 1rem;\n  font-size: 1.5rem;\n`;\n\nconst Contour = styled.hr`\n  margin-top: 25px;\n  width: 100%;\n  border: 1px solid rgb(241, 242, 243);\n`;\n\nconst CommentMakeContainer = styled.div`\n  margin: 30px 0;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CommentCount = styled.div`\n  margin-bottom: 15px;\n`;\n\nconst CommentInput = styled.textarea`\n  width: 100%;\n  height: 80px;\n  font-size: 16px;\n  font-weight: 400;\n  border: 1px solid rgb(210, 215, 220);\n  border-radius: 4px;\n`;\n\nconst CommentSubmit = styled(Button)`\n  padding: 5px 15px;\n  color: white;\n  font-weight: 600;\n  font-size: 16px;\n  width: 100px;\n  border: none;\n  margin-top: 10px;\n`;\n\nconst LikeSidebarContainer = styled.div`\n  position: relative;\n  margin-top: 2rem;\n`;\n\nconst LikeSidebar = styled.aside`\n  @media (max-width: 1024px) {\n    display: none;\n  }\n  position: absolute;\n  left: -7rem;\n`;\n\nconst LikeContainer = styled.div`\n  width: 4rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: rgb(248, 249, 250);\n  border: 1px solid rgb(241, 243, 245);\n  border-image: initial;\n  border-radius: 2rem;\n  padding: 0.5rem;\n`;\n\nconst LikeButton = styled.div`\n  width: 3rem;\n  height: 3rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: rgb(134, 142, 150);\n  cursor: pointer;\n  background-color: white;\n  border: 1px solid rgb(173, 181, 189);\n  border-radius: 1.5rem;\n\n  &:hover {\n    color: black;\n    border: 1px solid black;\n  }\n`;\n\nconst LikedButton = styled.div`\n  width: 3rem;\n  height: 3rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  cursor: pointer;\n  background-color: rgb(32, 201, 151);\n  border: 1px solid rgb(32, 201, 151);\n  border-radius: 1.5rem;\n`;\n\nconst LikeCount = styled.p`\n  font-weight: 500;\n`;\n\nconst CommentsContaniner = styled.div`\n  margin-top: 2.5rem;\n`;\nconst CommentBox = styled.div`\n  padding-top: 1.5rem;\n  padding-bottom: 1.5rem;\n`;\n\nconst CommentUser = styled.div`\n  margin-bottom: 1.5rem;\n  display: flex;\n  -webkit-box-pack: justify;\n  -webkit-box-align: center;\n  align-items: center;\n`;\n\nconst CommentProfile = styled.div`\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n`;\n\nconst CommentInfo = styled.div`\n  margin-left: 1rem;\n  line-height: 1;\n`;\n\nconst ConmentUserName = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  color: rgb(52, 58, 64);\n`;\n\nconst CommentDate = styled.div`\n  margin-top: 0.5rem;\n  color: rgb(134, 142, 150);\n  font-size: 0.875rem;\n`;\n\nconst CommentContent = styled.div`\n  font-size: 1.125rem;\n  color: rgb(34, 36, 38);\n  line-height: 1.7;\n  letter-spacing: -0.004em;\n  word-break: keep-all;\n  overflow-wrap: break-word;\n`;\n\nexport default PostDetailPresenter;\n","import React, { useState, useCallback } from \"react\";\nimport { useQuery, useMutation } from \"react-apollo-hooks\";\nimport {\n  getPostDetailVars,\n  QUERY_POST_DETAIL,\n  getPostDetailData,\n  MUTATION_LIKE_POST,\n} from \"./PostDetailQueries\";\nimport { toast } from \"react-toastify\";\nimport { useParams } from \"react-router-dom\";\nimport { ADD_COMMENT } from \"./Comment/addCommentQueries\";\nimport PostDetailPresenter from \"./PostDetailPresenter\";\n\ninterface PostDetailParams {\n  username: string;\n  posturl: string;\n}\n\nconst PostDetailContainer = () => {\n  const { username, posturl } = useParams() as PostDetailParams;\n  const { data: postData, loading, refetch } = useQuery<\n    getPostDetailData,\n    getPostDetailVars\n  >(QUERY_POST_DETAIL, {\n    variables: {\n      username: username,\n      url: posturl,\n    },\n  });\n  const [makeCommentDisable, setMakeCommentDisable] = useState<boolean>(false);\n  const [comment, setComment] = useState<string>(\"\");\n\n  const [commentMutation] = useMutation(ADD_COMMENT);\n  const [likeMutation] = useMutation(MUTATION_LIKE_POST);\n\n  const handleChangeComment = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setComment(e.target.value);\n    },\n    []\n  );\n\n  const handleMakeComment = useCallback(\n    async (e: any) => {\n      e.preventDefault();\n      setMakeCommentDisable(true);\n      if (comment !== \"\") {\n        try {\n          const { data }: any = await commentMutation({\n            variables: {\n              text: comment,\n              postId: postData?.getPostDetail.id,\n            },\n          });\n          await refetch();\n          if (!data.addComment) {\n            toast.error(\"댓글 작성에 실패했습니다.\");\n          } else {\n            toast.success(\"댓글 작성에 성공했습니다.\");\n          }\n          window.scrollTo(0, document.body.scrollHeight);\n        } catch (e) {\n          console.log(e);\n          toast.error(\"요청을 완료할 수 없습니다. 다시 시도해주세요.\");\n        }\n      }\n      setMakeCommentDisable(false);\n    },\n    [postData, comment, commentMutation, refetch]\n  );\n\n  const handleClickLike = useCallback(\n    async (e: any) => {\n      e.preventDefault();\n      try {\n        const {\n          data: { toggleLike },\n        }: any = await likeMutation({\n          variables: {\n            postId: postData?.getPostDetail.id,\n          },\n        });\n        await refetch();\n        if (!toggleLike) {\n          toast.error(\"잠시 후 다시 시도해주세요.\");\n        }\n      } catch (e) {\n        console.log(e);\n        toast.error(\"요청을 완료할 수 없습니다. 다시 시도해주세요.\");\n      }\n    },\n    [postData, likeMutation, refetch]\n  );\n  return (\n    <PostDetailPresenter\n      username={username}\n      data={postData}\n      loading={loading}\n      comment={comment}\n      makeCommentDisable={makeCommentDisable}\n      handleChangeComment={handleChangeComment}\n      handleMakeComment={handleMakeComment}\n      handleClickLike={handleClickLike}\n    />\n  );\n};\n\nexport default PostDetailContainer;\n","import PostDetailContainer from \"./PostDetailContainer\";\n\nexport default PostDetailContainer;\n"],"sourceRoot":""}