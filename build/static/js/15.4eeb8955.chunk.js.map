{"version":3,"sources":["components/pages/Search.tsx"],"names":["Container","styled","div","Search","history","useHistory","searchTerm","useLocation","search","split","useState","term","setTerm","useQuery","QUERY_SEARCH_POST","variables","skip","length","data","loading","error","useEffect","window","location","reload","toast","searchType","posts","searchPost","onTermChange","e","replace","target","value"],"mappings":"0iBAaA,IA4CMA,EAAYC,IAAOC,IAAV,KAiBAC,UA7DA,WACb,IAAMC,EAAUC,cAEVC,EADWC,cACmBC,OAAOC,MAAM,KAAK,GAHnC,EAIKC,mBAAiBJ,GAA0B,IAJhD,mBAIZK,EAJY,KAINC,EAJM,OAMcC,YAC/BC,IACA,CACEC,UAAW,CAAEJ,QACbK,KAAsB,IAAhBL,EAAKM,SAJPC,EANW,EAMXA,KAAMC,EANK,EAMLA,QAASC,EANJ,EAMIA,MAoBvB,OAPAC,qBAAU,WACJD,IACFE,OAAOC,SAASC,SAChBC,IAAML,MAAM,wHAEb,CAACA,IAGF,kBAACpB,EAAD,KACE,kBAAC,IAAD,KACE,+BACGW,EAAKM,OAAS,EAAd,WAAsBN,EAAtB,4CAAmD,eAGxD,kBAAC,IAAD,CACEe,WAAY,SACZC,MAAK,OAAET,QAAF,IAAEA,OAAF,EAAEA,EAAMU,WACbjB,KAAMA,EACNkB,aAvBe,SAACC,GACpB1B,EAAQ2B,QAAQ,aAAeD,EAAEE,OAAOC,OACxCrB,EAAQkB,EAAEE,OAAOC,QAsBbd,QAASA","file":"static/js/15.4eeb8955.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SearchPostList from \"../modules/SearchPostList/SearchPostList\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport {\n  searchPostData,\n  searchPostVars,\n  QUERY_SEARCH_POST,\n} from \"../modules/SearchPostList/SearchPostListQueries\";\nimport { Helmet } from \"react-helmet\";\nimport styled from \"styled-components\";\nimport { toast } from \"react-toastify\";\n\nconst Search = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchTerm: string = location.search.split(\"=\")[1];\n  const [term, setTerm] = useState<string>(searchTerm ? searchTerm : \"\");\n\n  const { data, loading, error } = useQuery<searchPostData, searchPostVars>(\n    QUERY_SEARCH_POST,\n    {\n      variables: { term },\n      skip: term.length === 0,\n    }\n  );\n\n  const onTermChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    history.replace(\"/search?q=\" + e.target.value);\n    setTerm(e.target.value);\n  };\n\n  useEffect(() => {\n    if (error) {\n      window.location.reload();\n      toast.error(\"포스트를 가져오던 중 문제가 발생했습니다.\");\n    }\n  }, [error]);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {term.length > 0 ? `\"${term}\" 검색 결과 - Agent Blog` : \"Agent Blog\"}\n        </title>\n      </Helmet>\n      <SearchPostList\n        searchType={\"Search\"}\n        posts={data?.searchPost}\n        term={term}\n        onTermChange={onTermChange}\n        loading={loading}\n      />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  @media (max-width: 1024px) {\n    padding-left: 1rem;\n    padding-right: 1rem;\n    margin-top: 2rem;\n  }\n  @media (max-width: 768px) {\n    margin-top: 0.5rem;\n    width: 100%;\n  }\n\n  margin-top: 3.5rem;\n  width: 768px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport default Search;\n"],"sourceRoot":""}