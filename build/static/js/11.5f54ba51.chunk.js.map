{"version":3,"sources":["shared/utils.tsx","components/atoms/theme/DetailText.tsx","models/user.tsx","components/pages/Setting.tsx"],"names":["convertMarkdownToText","str","marked","replace","match","dec","String","fromCharCode","uploadImage","file","a","formData","FormData","append","name","Axios","post","serverUri","headers","DateToYYYYMMDD","date","tokens","slice","split","Text","styled","span","DetailText","text","props","QUERY_EDIT_USER","gql","QUERY_USER_HOME","Container","main","Profile","section","SettingWrapper","RowResponsiveContainer","div","SettingLabel","SettingContent","EH3","h3","SettingText","SettingRow","ImageEditContainer","ProfileTextContainer","EditButton","EAvatar","Avatar","EButton","Button","SettingSaveButton","EInput","Input","SettingInput","DetailTextContainer","Setting","me","useSelector","state","useState","isNameBioEditing","setIsNameBioEditing","isNameBioSaving","setIsNameBioSaving","isImageUploading","setIsImageUploading","isBlognameEditing","setIsBlognameEditing","isBlognameSaving","setIsBlognameSaving","useInput","username","setUsername","bio","setBio","blogname","setBlogname","disfetch","useDispatch","useMutation","editUserMutation","handleUploadAvatar","useCallback","e","target","files","length","avatar","data","variables","location","me_set","editUser","toast","error","handleRemoveAvatar","handleSaveNameBio","value","handleSaveBlogname","console","log","size","url","id","type","accept","onChange","hidden","disabled","onClick","document","getElementById","click","buttonType","placeholder","style","fontSize","alignSelf","margin","colorStyle"],"mappings":"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","file":"static/js/11.5f54ba51.chunk.js","sourcesContent":["import marked from \"marked\";\nimport Axios from \"axios\";\nimport { serverUri } from \"../Apollo/Client\";\n\nexport const convertMarkdownToText = (str: string) => {\n  return marked(str)\n    .replace(/<[^>]+>/g, \"\")\n    .replace(/&#(\\d+);/g, function (match, dec) {\n      return String.fromCharCode(dec);\n    });\n};\n\nexport const uploadImage = async (file: File) => {\n  const formData = new FormData();\n  formData.append(\"file\", file, file.name);\n  return await Axios.post(serverUri + \"/api/upload\", formData, {\n    headers: {\n      \"content-type\": \"multipart/form-data\",\n    },\n  });\n};\n\nexport const DateToYYYYMMDD = (date: string) => {\n  const tokens = date.slice(0, 10).split(\"-\");\n  return `${tokens[0]}년 ${tokens[1]}월 ${tokens[2]}일`;\n};\n","import React, { HTMLAttributes } from \"react\";\nimport styled from \"styled-components\";\n\ninterface DetailTextProps extends HTMLAttributes<HTMLElement> {\n  text: string;\n  color?: string;\n}\n\nconst DetailText: React.FC<DetailTextProps> = ({ text, ...props }) => (\n  <Text {...props}>{text}</Text>\n);\n\nconst Text = styled.span`\n  font-size: 0.875rem;\n  color: rgb(134, 142, 150);\n`;\n\nexport default DetailText;\n","import { postInterface } from \"./post\";\nimport { gql } from \"@apollo/client\";\n\nexport interface userInterface {\n  id: string;\n  avatar: string;\n  username: string;\n  blogname: string;\n  email: string;\n  bio: string;\n  posts: Pick<\n    postInterface,\n    | \"id\"\n    | \"user\"\n    | \"url\"\n    | \"title\"\n    | \"description\"\n    | \"content\"\n    | \"thumbnail\"\n    | \"hashtags\"\n    | \"createdAt\"\n    | \"commentCount\"\n  >[];\n}\n\nexport type MeProps = Pick<\n  userInterface,\n  \"id\" | \"avatar\" | \"username\" | \"blogname\" | \"email\" | \"bio\" | \"posts\"\n>;\n\nexport type seeUser = Pick<\n  userInterface,\n  \"id\" | \"avatar\" | \"username\" | \"blogname\" | \"email\" | \"bio\" | \"posts\"\n>;\n\nexport const QUERY_EDIT_USER = gql`\n  mutation editUser(\n    $username: String\n    $blogname: String\n    $bio: String\n    $avatar: String\n  ) {\n    editUser(\n      username: $username\n      blogname: $blogname\n      bio: $bio\n      avatar: $avatar\n    ) {\n      username\n      blogname\n      email\n      bio\n      avatar\n    }\n  }\n`;\n\nexport const QUERY_USER_HOME = gql`\n  query seeUser($username: String!) {\n    seeUser(username: $username) {\n      avatar\n      bio\n      posts {\n        id\n        user {\n          id\n          username\n          avatar\n        }\n        thumbnail\n        description\n        files {\n          id\n          url\n        }\n        url\n        title\n        content\n        hashtags {\n          id\n          name\n        }\n        createdAt\n        commentCount\n      }\n    }\n  }\n`;\n","import React, { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../atoms/theme/Button\";\nimport DetailText from \"../atoms/theme/DetailText\";\nimport Input from \"../atoms/theme/Input\";\nimport Avatar from \"../atoms/user/Avatar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/modules\";\nimport { toast } from \"react-toastify\";\nimport { QUERY_EDIT_USER, MeProps } from \"../../models/user\";\nimport { me_set } from \"../../store/modules/me\";\nimport useInput from \"../../hooks/useInput\";\nimport { uploadImage } from \"../../shared/utils\";\nimport { useMutation } from \"@apollo/client\";\n\nconst Setting = () => {\n  const me = useSelector((state: RootState) => state.me);\n  const [isNameBioEditing, setIsNameBioEditing] = useState<boolean>(false);\n  const [isNameBioSaving, setIsNameBioSaving] = useState<boolean>(false);\n  const [isImageUploading, setIsImageUploading] = useState<boolean>(false);\n  const [isBlognameEditing, setIsBlognameEditing] = useState<boolean>(false);\n  const [isBlognameSaving, setIsBlognameSaving] = useState<boolean>(false);\n\n  const [username, setUsername] = useInput(me.username);\n  const [bio, setBio] = useInput(me.bio);\n  const [blogname, setBlogname] = useInput(me.blogname);\n\n  const disfetch = useDispatch();\n  const [editUserMutation] = useMutation(QUERY_EDIT_USER);\n\n  const handleUploadAvatar = useCallback(\n    async (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (!e.target.files || e.target.files.length === 0) return;\n      const file = e.target.files[0];\n      setIsImageUploading(true);\n      try {\n        const { data: avatar } = await uploadImage(file);\n        const { data }: any = await editUserMutation({\n          variables: { avatar: avatar.location },\n        });\n        disfetch(me_set(data.editUser as MeProps));\n      } catch (err) {\n        toast.error(\"파일 업로드에 실패하였습니다.\" + err);\n        return null;\n      }\n      setIsImageUploading(false);\n    },\n    [disfetch, editUserMutation]\n  );\n\n  const handleRemoveAvatar = useCallback(\n    async (e: any) => {\n      try {\n        // TODO - Remove Image from S3 Server\n        const { data }: any = await editUserMutation({\n          variables: { avatar: \"\" },\n        });\n        disfetch(me_set(data.editUser as MeProps));\n      } catch (err) {\n        toast.error(\"이미지 제거에 실패했습니다.\" + err);\n        return null;\n      }\n    },\n    [disfetch, editUserMutation]\n  );\n\n  const handleEditNameBio = () => {\n    setUsername(me.username);\n    setBio(me.bio);\n    setIsNameBioEditing(true);\n  };\n\n  const handleSaveNameBio = async () => {\n    if (username.value === \"\") {\n      toast.error(\"이름을 비울 수 없습니다.\");\n      return;\n    }\n    try {\n      setIsNameBioSaving(true);\n      const { data }: any = await editUserMutation({\n        variables: {\n          username: username.value,\n          bio: bio.value,\n        },\n      });\n      disfetch(me_set(data.editUser as MeProps));\n      setIsNameBioEditing(false);\n    } catch (err) {\n      toast.error(\"변경 내용 저장 중 에러가 발생했습니다.\");\n    }\n    setIsNameBioSaving(false);\n  };\n\n  const handleEditBlogname = () => {\n    setBlogname(me.blogname);\n    setIsBlognameEditing(true);\n  };\n\n  const handleSaveBlogname = async () => {\n    if (blogname.value === \"\") {\n      toast.error(\"블로그 이름을 비울 수 없습니다.\");\n      return;\n    }\n    try {\n      setIsBlognameSaving(true);\n      const { data }: any = await editUserMutation({\n        variables: {\n          blogname: blogname.value,\n        },\n      });\n      disfetch(me_set(data.editUser as MeProps));\n      setIsBlognameEditing(false);\n    } catch (err) {\n      toast.error(\"변경 내용 저장 중 에러가 발생했습니다.\");\n      console.log(err);\n    }\n    setIsBlognameSaving(false);\n  };\n\n  return (\n    <Container>\n      <Profile>\n        <ImageEditContainer>\n          <EAvatar size={\"lg\"} url={me.avatar} />\n          <input\n            id={\"fileid\"}\n            type={\"file\"}\n            accept={\"image/*\"}\n            onChange={handleUploadAvatar}\n            hidden\n          />\n          <EButton\n            text={\"이미지 업로드\"}\n            disabled={isImageUploading}\n            onClick={() => document.getElementById(\"fileid\")?.click()}\n          />\n          <EButton\n            text={\"이미지 제거\"}\n            buttonType={\"text\"}\n            onClick={handleRemoveAvatar}\n          />\n        </ImageEditContainer>\n\n        <ProfileTextContainer>\n          {!isNameBioEditing ? (\n            <>\n              <h1 style={{ margin: \"0.5rem 0 0 0\" }}>{me.username}</h1>\n              <DetailText text={me.bio} />\n              <EditButton onClick={handleEditNameBio}>수정</EditButton>\n            </>\n          ) : (\n            <>\n              <EInput\n                placeholder={\"이름\"}\n                style={{ fontSize: \"1.5rem\" }}\n                {...username}\n              />\n              <EInput placeholder={\"한 줄 소개\"} {...bio} />\n              <EButton\n                text={\"저장\"}\n                onClick={handleSaveNameBio}\n                disabled={isNameBioSaving}\n                style={{ alignSelf: \"flex-end\" }}\n              />\n            </>\n          )}\n        </ProfileTextContainer>\n      </Profile>\n      <SettingWrapper>\n        <SettingRow>\n          <RowResponsiveContainer>\n            <SettingLabel>\n              <EH3>블로그 제목</EH3>\n            </SettingLabel>\n            <SettingContent>\n              {!isBlognameEditing ? (\n                <>\n                  <SettingText>{me.blogname}</SettingText>\n                  <EditButton onClick={handleEditBlogname}>수정</EditButton>\n                </>\n              ) : (\n                <>\n                  <SettingInput placeholder={\"블로그 제목\"} {...blogname} />\n                  <SettingSaveButton\n                    text={\"저장\"}\n                    onClick={handleSaveBlogname}\n                    disabled={isBlognameSaving}\n                  />\n                </>\n              )}\n            </SettingContent>\n          </RowResponsiveContainer>\n          <DetailTextContainer>\n            <DetailText\n              text={\"개인 페이지의 좌측 상단에 나타나는 페이지 제목입니다.\"}\n            />\n          </DetailTextContainer>\n        </SettingRow>\n        <SettingRow>\n          <RowResponsiveContainer>\n            <SettingLabel>\n              <EH3>이메일 주소</EH3>\n            </SettingLabel>\n            <SettingText>react.log</SettingText>\n          </RowResponsiveContainer>\n          <DetailTextContainer>\n            <DetailText\n              text={\n                \"회원 인증 또는 시스템에서 발송하는 이메일을 수신하는 주소입니다.\"\n              }\n            />\n          </DetailTextContainer>\n        </SettingRow>\n        <SettingRow>\n          <RowResponsiveContainer>\n            <SettingLabel>\n              <EH3>회원 탈퇴</EH3>\n            </SettingLabel>\n            <EButton text={\"회원 탈퇴\"} colorStyle={\"warning\"} />\n          </RowResponsiveContainer>\n          <DetailTextContainer>\n            <DetailText\n              text={\n                \"탈퇴 시 작성하신 포스트 및 댓글이 모두 삭제되며 복구되지 않습니다.\"\n              }\n            />\n          </DetailTextContainer>\n        </SettingRow>\n      </SettingWrapper>\n    </Container>\n  );\n};\n\nconst Container = styled.main`\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-top: 1.5rem;\n  }\n  @media (max-width: 1024px) {\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n  margin-top: 3rem;\n  margin-left: auto;\n  margin-right: auto;\n  width: 768px;\n  padding-bottom: 5rem;\n\n  display: flex;\n  flex-direction: column;\n`;\nconst Profile = styled.section`\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n  flex-direction: row;\n  display: flex;\n`;\nconst SettingWrapper = styled.section`\n  margin-top: 4rem;\n`;\nconst RowResponsiveContainer = styled.div`\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n  flex-direction: row;\n  display: flex;\n`;\nconst SettingLabel = styled.div`\n  width: 10rem;\n`;\nconst SettingContent = styled.div`\n  display: flex;\n  flex: 1 1 0%;\n  align-items: center;\n`;\nconst EH3 = styled.h3`\n  margin: 0px;\n  line-height: 1.5;\n`;\nconst SettingText = styled.div`\n  display: flex;\n  flex: 1 1 0%;\n  align-items: center;\n`;\nconst SettingRow = styled.div`\n  & + & {\n    border-top: 1px solid rgb(233, 236, 239);\n  }\n  padding: 1rem 0px;\n`;\nconst ImageEditContainer = styled.div`\n  @media (max-width: 768px) {\n    align-self: center;\n  }\n  flex-direction: column;\n  display: flex;\n  padding-right: 1.5rem;\n`;\nconst ProfileTextContainer = styled.div`\n  @media (max-width: 768px) {\n    border-top: 1px solid rgb(233, 236, 239);\n  }\n  @media (min-width: 769px) {\n    border-left: 1px solid rgb(233, 236, 239);\n  }\n\n  padding-left: 1.5rem;\n  flex: 1 1 0%;\n\n  display: flex;\n  flex-direction: column;\n  & > * + * {\n    margin-top: 1rem;\n  }\n`;\nconst EditButton = styled.span`\n  text-decoration: underline;\n  color: rgb(18, 184, 134);\n  &:focus {\n    color: rgb(56, 217, 169);\n  }\n  cursor: pointer;\n`;\nconst EAvatar = styled(Avatar)`\n  margin-bottom: 1rem;\n`;\nconst EButton = styled(Button)`\n  width: 8rem;\n  height: 2rem;\n  & + & {\n    margin-top: 0.5rem;\n  }\n`;\nconst SettingSaveButton = styled(Button)`\n  width: 5rem;\n  height: 2.2rem;\n  margin-left: 1rem;\n`;\nconst EInput = styled(Input)`\n  width: auto;\n`;\n\nconst SettingInput = styled(Input)`\n  flex: 1 1 0%;\n`;\n\nconst DetailTextContainer = styled.div`\n  margin-top: 1rem;\n`;\n\nexport default Setting;\n"],"sourceRoot":""}